<script id="code">
  var AllowTopLevel = false;
  var CellSize = new go.Size(50, 50);
  function init() {
    if (window.goSamples) goSamples();
    var $ = go.GraphObject.make;
    myDiagram =
      $(go.Diagram, "myDiagramDiv",
        {
          isReadOnly: true,
          "toolManager.hoverDelay": 100,
          grid: $(go.Panel, "Grid",
            { gridCellSize: CellSize },
            $(go.Shape, "LineH", { stroke: "lightgray" }),
            $(go.Shape, "LineV", { stroke: "lightgray" })),
        });
    function textStyle() {
      return { font: "9pt  Segoe UI,sans-serif", stroke: "white" };
    }
    myDiagram.nodeTemplate =
      $(go.Node, "Auto",
        new go.Binding("position", "pos", go.Point.parse)
          .makeTwoWay(go.Point.stringify),
        $(go.Shape, "Rectangle",
          { name: "SHAPE",
            fill: "white",
            minSize: CellSize,
            desiredSize: CellSize
          },
          new go.Binding("fill", "color"),
          new go.Binding("desiredSize", "size", go.Size.parse)
            .makeTwoWay(go.Size.stringify)),
        $(go.TextBlock,
          { alignment: go.Spot.Center, font: 'bold 16px sans-serif' },
          new go.Binding("text", "key")),
        {
          toolTip:
            $(go.Adornment, "Auto",
              $(go.Shape, "Rectangle",
                {
                  name: "SHAPE", fill: "green", stroke: null,
                }),
              $(go.Panel, "Horizontal",
                $(go.Panel, "Table",
                  {
                    maxSize: new go.Size(150, 999),
                    margin: new go.Margin(6, 10, 0, 3),
                    defaultAlignment: go.Spot.Left
                  },
                  $(go.RowColumnDefinition, { column: 2, width: 4 }),
                  $(go.TextBlock, textStyle(),
                    {
                      row: 0, column: 0, columnSpan: 5,
                      font: "15pt Segoe UI,sans-serif",
                      editable: true, isMultiline: false,
                      minSize: new go.Size(10, 16)
                    },
                    new go.Binding("text", "key").makeTwoWay()),
                  $(go.TextBlock, "Gender: ", textStyle(),
                    { row: 1, column: 0 }),
                  $(go.TextBlock, textStyle(),
                    {
                      row: 1, column: 1, columnSpan: 4,
                      editable: true, isMultiline: false,
                      minSize: new go.Size(10, 14),
                      margin: new go.Margin(0, 0, 0, 3)
                    },
                    new go.Binding("text", "gender").makeTwoWay()),
                  $(go.TextBlock, "Role: ", textStyle(),
                    { row: 2, column: 0 }),
                  $(go.TextBlock, textStyle(),
                    {
                      row: 2, column: 1, columnSpan: 4,
                      editable: true, isMultiline: false,
                      minSize: new go.Size(10, 14),
                      margin: new go.Margin(0, 0, 0, 3)
                    },
                    new go.Binding("text", "role").makeTwoWay()),
                  $(go.TextBlock, "BirthDay", textStyle(),
                    { row: 3, column: 0 }),
                  $(go.TextBlock, textStyle(),
                    {
                      row: 3, column: 1, columnSpan: 4,
                      editable: true, isMultiline: false,
                      minSize: new go.Size(10, 14),
                      margin: new go.Margin(0, 0, 0, 3)
                    },
                    new go.Binding("text", "birthday").makeTwoWay())
                )
              )
            )
        }
      );

    var groupFill = "rgba(128,128,128,0.2)";
    var groupStroke = "gray";
    var dropFill = "rgba(128,255,255,0.2)";
    var dropStroke = "red";

    myDiagram.groupTemplate =
      $(go.Group,
        {
          layerName: "Background",
          resizable: true, resizeObjectName: "SHAPE",
          locationSpot: new
            go.Spot(0, 0, CellSize.width/2, CellSize.height/2)
        },
        new go.Binding("position", "pos", go.Point.parse)
          .makeTwoWay(go.Point.stringify),
        $(go.Shape, "Rectangle",
          { name: "SHAPE",
            fill: groupFill,
            stroke: groupStroke,
            minSize: new go.Size(CellSize.width*2, CellSize.height*2)
          },
          new go.Binding("desiredSize", "size", go.Size.parse)
            .makeTwoWay(go.Size.stringify),
          new go.Binding("fill", "isHighlighted", function(h)
            { return h ? dropFill : groupFill; }).ofObject(),
          new go.Binding("stroke", "isHighlighted",
            function(h) { return h ? dropStroke: groupStroke; }).ofObject())
      );

    myDiagram.model = new go.GraphLinksModel(
      <%= raw @sections.to_json %>
    );
  }
</script>
